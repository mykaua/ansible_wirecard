---
- name: create users configuration directory
  file:
    path: "{{wg_conf_dir}}/users/{{item.value.username}}"
    state: directory
  with_dict: "{{ wg_user_list }}"
  when: (item.value.remove == false)

- name: Generate Wireguard users key
  shell: |
    if [ ! -f {{ wg_conf_dir }}/users/{{ item.value.username }}/{{ item.value.username }}_privatekey ]
      then
        cd {{ wg_conf_dir }}/users/{{ item.value.username }}
        umask 077 && wg genkey | tee {{ item.value.username }}_privatekey | wg pubkey > {{ item.value.username }}_publickey
        wg genpsk > user_presharedkey
    fi
    exit 0
  when: (item.value.remove == False)
  with_dict: "{{ wg_user_list }}"

- name: Get user private key
  slurp:
    src: "{{ wg_conf_dir }}/users/{{ item.value.username }}/{{ item.value.username }}_privatekey"
  register: user_privatekey
  with_dict: "{{ wg_user_list }}"
  when: (item.value.remove == false)

- name: Get user public key
  slurp:
    src: "{{ wg_conf_dir }}/users/{{ item.value.username }}/{{ item.value.username }}_publickey"
  register: user_publickey
  with_dict: "{{ wg_user_list }}"
#  when: (item.value.remove == false)

- name: Get server publicKey
  shell: wg show | grep public | awk '{print $3}'
  register: wg_server_public_key

- name: generate wireguard user config
  template:
    src: "wg0-user.j2"
    dest: "{{wg_conf_dir}}/users/{{item.item.value.username}}/wg0-{{item.item.value.username}}.conf"
  loop: "{{user_privatekey.results}}"
  when: (item.item.value.remove == false)
  notify: restart wg0
  register: user_profile

#- name: debug
#  debug:
#    msg: "{{item}}"
#  loop: "{{user_publickey.results}}"

- name: insert user configuration to wireguard
  blockinfile:
    path: "{{wg_conf_dir}}/wg0.conf"
    state: present
    marker: "# {mark} user config {{ item.item.value.username }}"
    block: "{{ lookup('template', 'wg-config.j2') }}"
  loop: "{{user_publickey.results}}"
  when: (item.item.value.remove == false)
  notify: restart wg0

- name: remove user configuration from wireguard
  blockinfile:
    path: "{{wg_conf_dir}}/wg0.conf"
    state: absent
    marker: "# {mark} user config {{ item.item.value.username }}"
    block: "{{ lookup('template', 'wg-config.j2') }}"
  loop: "{{user_publickey.results}}"
  when: (item.item.value.remove == true)
  notify: restart wg0

- name: remove users configuration directory
  file:
    path: "{{ wg_conf_dir }}/users/{{ item.value.username }}"
    state: absent
  with_dict: "{{ wg_user_list }}"
  when: (item.value.remove == true)

- name: Fetch Wireguard users configs
  fetch:
    src: "{{item.dest}}"
    dest: "{{ download_path }}"
  loop: "{{ user_profile.results }}"
  when: (item.item.item.value.remove == False)
